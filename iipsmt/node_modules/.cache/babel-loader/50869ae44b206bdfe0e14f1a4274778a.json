{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\iipsmt\\\\src\\\\pages\\\\UploadTest\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport MainSheet from './index.module.css';\nimport icon_file from '../../static/icons/icon_file.png';\nimport icon_train from '../../static/icons/icon_train.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTrainClick = () => {\n      // this.props.history.push('/test_result')\n      // console.log(this.resultFile);\n      let form = new FormData();\n      form.append('file', this.resultFile);\n      form.append('chunk', '0');\n      axios.post('/' + this.props.match.params.file_type, form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log('upload successfully', res);\n\n        switch (this.props.match.params.file_type) {\n          case 'classify_step1':\n            this.props.history.push('/test_result');\n            break;\n\n          case 'classify_step3':\n            this.props.history.push('/classify_step3');\n            break;\n\n          default:\n            this.props.history.push('/test_result');\n        }\n      });\n    };\n\n    this.handleFileUpload = e => {\n      var self = this;\n      var resultFile = e.target.files[0];\n      this.resultFile = e.target.files[0];\n\n      if (resultFile) {\n        var reader = new FileReader();\n        reader.readAsText(resultFile, 'UTF-8');\n\n        reader.onload = function () {\n          self.setState({\n            content: this.result,\n            fileName: e.target.value\n          });\n        };\n      }\n    };\n\n    console.log(this.props.match.params);\n    this.state = {\n      fileName: '未上传',\n      content: '文件预览区域'\n    };\n    this.resultFile = '';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [MainSheet.pagePadding, 'zoomIn'].join(' '),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: MainSheet.pageContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: MainSheet.fileUploadModule,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: MainSheet.filePath,\n            children: this.state.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            className: MainSheet.fileUploadLable,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: MainSheet.btnIcon,\n              src: icon_file,\n              alt: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), \"\\u9009\\u62E9\\u6D4B\\u8BD5\\u96C6\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: MainSheet.modelTraining,\n            onClick: () => this.handleTrainClick(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: MainSheet.btnIcon,\n              src: icon_train,\n              alt: \"train\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), \"\\u6076\\u610F\\u6D41\\u91CF\\u5206\\u7C7B\\u4EFB\\u52A1\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: MainSheet.modelTraining,\n            onClick: () => this.handleTrainClick(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: MainSheet.btnIcon,\n              src: icon_train,\n              alt: \"train\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), \"\\u6076\\u610F\\u6D41\\u91CF\\u9884\\u6D4B\\u4EFB\\u52A1\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file\",\n            className: MainSheet.fileUpload,\n            type: \"file\",\n            onChange: e => this.handleFileUpload(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: MainSheet.fileOverview,\n          children: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Project/React/iipsmt/src/pages/UploadTest/index.jsx"],"names":["React","Component","MainSheet","icon_file","icon_train","axios","UploadTest","constructor","props","handleTrainClick","form","FormData","append","resultFile","post","match","params","file_type","headers","then","res","console","log","history","push","handleFileUpload","e","self","target","files","reader","FileReader","readAsText","onload","setState","content","result","fileName","value","state","render","pagePadding","join","pageContainer","fileUploadModule","filePath","fileUploadLable","btnIcon","modelTraining","fileUpload","fileOverview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport MainSheet from './index.module.css'\r\n\r\nimport icon_file from '../../static/icons/icon_file.png'\r\nimport icon_train from '../../static/icons/icon_train.png'\r\nimport axios from 'axios'\r\n\r\nexport default class UploadTest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props.match.params);\r\n        this.state = {\r\n            fileName: '未上传',\r\n            content: '文件预览区域'\r\n        }\r\n        this.resultFile = '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={[MainSheet.pagePadding, 'zoomIn'].join(' ')}>\r\n                <div className={MainSheet.pageContainer}>\r\n                    <div className={MainSheet.fileUploadModule}>\r\n                        <div className={MainSheet.filePath}>{this.state.fileName}</div>\r\n                        <label htmlFor=\"file\" className={MainSheet.fileUploadLable}>\r\n                            <img className={MainSheet.btnIcon} src={icon_file} alt=\"file\" />\r\n                            选择测试集\r\n                        </label>\r\n                        <button className={MainSheet.modelTraining} onClick={() => this.handleTrainClick()}>\r\n                            <img className={MainSheet.btnIcon} src={icon_train} alt=\"train\" />恶意流量分类任务\r\n                        </button>\r\n                        <button className={MainSheet.modelTraining} onClick={() => this.handleTrainClick()}>\r\n                            <img className={MainSheet.btnIcon} src={icon_train} alt=\"train\" />恶意流量预测任务\r\n                        </button>\r\n                        <input id='file' className={MainSheet.fileUpload} type=\"file\" onChange={(e) => this.handleFileUpload(e)} />\r\n                    </div>\r\n                    <span className={MainSheet.fileOverview}>{this.state.content}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleTrainClick = () => {\r\n        // this.props.history.push('/test_result')\r\n        // console.log(this.resultFile);\r\n        let form = new FormData();\r\n        form.append('file', this.resultFile);\r\n        form.append('chunk', '0');\r\n        axios.post('/' + this.props.match.params.file_type, form, { headers: { \"Content-Type\": \"multipart/form-data\" } })\r\n            .then(res => {\r\n                console.log('upload successfully', res);\r\n                switch (this.props.match.params.file_type) {\r\n                    case 'classify_step1':\r\n                        this.props.history.push('/test_result')\r\n                        break;\r\n                    case 'classify_step3':\r\n                        this.props.history.push('/classify_step3')\r\n                        break;\r\n                    default:\r\n                        this.props.history.push('/test_result')\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    handleFileUpload = (e) => {\r\n        var self = this;\r\n        var resultFile = e.target.files[0];\r\n        this.resultFile = e.target.files[0];\r\n        if (resultFile) {\r\n            var reader = new FileReader();\r\n            reader.readAsText(resultFile, 'UTF-8');\r\n            reader.onload = function () {\r\n                self.setState({\r\n                    content: this.result,\r\n                    fileName: e.target.value\r\n                })\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}