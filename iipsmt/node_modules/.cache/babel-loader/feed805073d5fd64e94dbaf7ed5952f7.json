{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../util/createLoading';\nimport { ErrorBoundary } from '../base';\nimport useGraph from '../hooks/useGraph';\nimport { defaultNodeSize, defaultLabelCfg, defaultStateStyles } from './constants';\nimport { processMinimap, getGraphSize, getGraphId, renderGraph, bindEvents } from './utils';\nimport { registerCustomItems } from './customItems';\nregisterCustomItems();\nvar defaultNodeStyle = {\n  stroke: '#40a9ff'\n};\nvar defaultNodeAnchorPoints = [[0, 0.5], [1, 0.5]];\nvar defaultEdgeStyle = {\n  stroke: '#ccc',\n  endArrow: {\n    path: G6.Arrow.vee(10, 10),\n    fill: '#ccc'\n  }\n};\nvar defaultLayout = {\n  type: 'indented',\n  direction: 'LR',\n  dropCap: false,\n  indent: 250,\n  getHeight: function () {\n    return 60;\n  },\n  getWidth: function () {\n    return 100;\n  }\n};\nvar graphs = {};\n\nvar IndentedTree = function (props) {\n  var data = props.data,\n      className = props.className,\n      style = props.style,\n      width = props.width,\n      height = props.height,\n      _a = props.nodeType,\n      nodeType = _a === void 0 ? 'card-node' : _a,\n      _b = props.edgeType,\n      edgeType = _b === void 0 ? 'cubic-horizontal' : _b,\n      _c = props.behaviors,\n      behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c,\n      _d = props.nodeSize,\n      nodeSize = _d === void 0 ? defaultNodeSize : _d,\n      _e = props.nodeLabelCfg,\n      nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e,\n      _f = props.nodeAnchorPoints,\n      nodeAnchorPoints = _f === void 0 ? defaultNodeAnchorPoints : _f,\n      _g = props.layout,\n      layout = _g === void 0 ? defaultLayout : _g,\n      minimapCfg = props.minimapCfg,\n      _h = props.nodeStyle,\n      nodeStyle = _h === void 0 ? defaultNodeStyle : _h,\n      _j = props.edgeStyle,\n      edgeStyle = _j === void 0 ? defaultEdgeStyle : _j,\n      _k = props.nodeStateStyles,\n      nodeStateStyles = _k === void 0 ? defaultStateStyles : _k,\n      _l = props.edgeStateStyles,\n      edgeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n      _m = props.collapseExpand,\n      collapseExpand = _m === void 0 ? true : _m,\n      _o = props.autoFit,\n      autoFit = _o === void 0 ? true : _o,\n      handleNodeClick = props.handleNodeClick,\n      graphRef = props.graphRef,\n      onReady = props.onReady,\n      loading = props.loading,\n      loadingTemplate = props.loadingTemplate,\n      errorTemplate = props.errorTemplate;\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  var container = React.useRef(null);\n  useGraph(graphs[graphId], props, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout\n      });\n      graphs[graphId] = graph;\n    }\n\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n\n    processMinimap(minimapCfg, graph);\n    renderGraph(graph, data, autoFit);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    if (collapseExpand) {\n      var onClick_1 = function (e) {\n        var item = e.item;\n\n        if (e.target.get('name') === 'collapse-icon') {\n          graph.updateItem(item, {\n            collapsed: !item.getModel().collapsed\n          });\n          graph.layout();\n        } else if (handleNodeClick) {\n          handleNodeClick(item, graph);\n        }\n      };\n\n      graph.on('node:click', function (e) {\n        onClick_1(e);\n      });\n      graph.on('node:touchstart', function (e) {\n        onClick_1(e);\n      });\n    }\n\n    bindEvents(graph, props);\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default IndentedTree;","map":{"version":3,"sources":["D:/Project/React/iipsmt/node_modules/@ant-design/charts/es/graph/indented.js"],"names":["React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","defaultNodeSize","defaultLabelCfg","defaultStateStyles","processMinimap","getGraphSize","getGraphId","renderGraph","bindEvents","registerCustomItems","defaultNodeStyle","stroke","defaultNodeAnchorPoints","defaultEdgeStyle","endArrow","path","Arrow","vee","fill","defaultLayout","type","direction","dropCap","indent","getHeight","getWidth","graphs","IndentedTree","props","data","className","style","width","height","_a","nodeType","_b","edgeType","_c","behaviors","_d","nodeSize","_e","nodeLabelCfg","_f","nodeAnchorPoints","_g","layout","minimapCfg","_h","nodeStyle","_j","edgeStyle","_k","nodeStateStyles","_l","edgeStateStyles","_m","collapseExpand","_o","autoFit","handleNodeClick","graphRef","onReady","loading","loadingTemplate","errorTemplate","graph","useRef","graphId","container","graphSize","TreeGraph","current","modes","default","defaultNode","size","anchorPoints","labelCfg","defaultEdge","onClick_1","e","item","target","get","updateItem","collapsed","getModel","on","destroy","createElement","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../util/createLoading';\nimport { ErrorBoundary } from '../base';\nimport useGraph from '../hooks/useGraph';\nimport { defaultNodeSize, defaultLabelCfg, defaultStateStyles } from './constants';\nimport { processMinimap, getGraphSize, getGraphId, renderGraph, bindEvents } from './utils';\nimport { registerCustomItems } from './customItems';\nregisterCustomItems();\nvar defaultNodeStyle = {\n    stroke: '#40a9ff',\n};\nvar defaultNodeAnchorPoints = [\n    [0, 0.5],\n    [1, 0.5],\n];\nvar defaultEdgeStyle = {\n    stroke: '#ccc',\n    endArrow: {\n        path: G6.Arrow.vee(10, 10),\n        fill: '#ccc',\n    },\n};\nvar defaultLayout = {\n    type: 'indented',\n    direction: 'LR',\n    dropCap: false,\n    indent: 250,\n    getHeight: function () {\n        return 60;\n    },\n    getWidth: function () {\n        return 100;\n    },\n};\nvar graphs = {};\nvar IndentedTree = function (props) {\n    var data = props.data, className = props.className, style = props.style, width = props.width, height = props.height, _a = props.nodeType, nodeType = _a === void 0 ? 'card-node' : _a, _b = props.edgeType, edgeType = _b === void 0 ? 'cubic-horizontal' : _b, _c = props.behaviors, behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c, _d = props.nodeSize, nodeSize = _d === void 0 ? defaultNodeSize : _d, _e = props.nodeLabelCfg, nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e, _f = props.nodeAnchorPoints, nodeAnchorPoints = _f === void 0 ? defaultNodeAnchorPoints : _f, _g = props.layout, layout = _g === void 0 ? defaultLayout : _g, minimapCfg = props.minimapCfg, _h = props.nodeStyle, nodeStyle = _h === void 0 ? defaultNodeStyle : _h, _j = props.edgeStyle, edgeStyle = _j === void 0 ? defaultEdgeStyle : _j, _k = props.nodeStateStyles, nodeStateStyles = _k === void 0 ? defaultStateStyles : _k, _l = props.edgeStateStyles, edgeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = props.collapseExpand, collapseExpand = _m === void 0 ? true : _m, _o = props.autoFit, autoFit = _o === void 0 ? true : _o, handleNodeClick = props.handleNodeClick, graphRef = props.graphRef, onReady = props.onReady, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate;\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    var container = React.useRef(null);\n    useGraph(graphs[graphId], props, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                modes: {\n                    default: behaviors,\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    anchorPoints: nodeAnchorPoints,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        processMinimap(minimapCfg, graph);\n        renderGraph(graph, data, autoFit);\n        if (onReady) {\n            onReady(graph);\n        }\n        if (collapseExpand) {\n            var onClick_1 = function (e) {\n                var item = e.item;\n                if (e.target.get('name') === 'collapse-icon') {\n                    graph.updateItem(item, {\n                        collapsed: !item.getModel().collapsed,\n                    });\n                    graph.layout();\n                }\n                else if (handleNodeClick) {\n                    handleNodeClick(item, graph);\n                }\n            };\n            graph.on('node:click', function (e) {\n                onClick_1(e);\n            });\n            graph.on('node:touchstart', function (e) {\n                onClick_1(e);\n            });\n        }\n        bindEvents(graph, props);\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default IndentedTree;\n"]},"metadata":{},"sourceType":"module"}