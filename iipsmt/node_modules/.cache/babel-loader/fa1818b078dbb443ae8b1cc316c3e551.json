{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\iipsmt\\\\src\\\\containers\\\\SignIn\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'react-router-dom';\nimport signIn from './index.module.css';\nimport { reqLogin } from '../../api/index';\nimport { setUserID, setUserType, checkUserID } from '../../redux/actions/UserInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleBlur = async (e, info) => {\n      switch (info) {\n        case 'id':\n          if (e.target.value !== '') {\n            this.setState({\n              userID: e.target.value\n            });\n          }\n\n          break;\n\n        case 'password':\n          if (e.target.value !== '') {\n            this.setState({\n              password: e.target.value\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleLoginClick = async e => {\n      const {\n        userID,\n        password\n      } = this.state;\n      console.log(userID, password);\n\n      if (userID && password) {\n        var response = await reqLogin({\n          userID,\n          password\n        });\n\n        if (response.data.code) {\n          e.target.value = \"Login Successfully\";\n          this.props.setUserID(userID);\n          this.props.setUserType(response.data.data.type);\n          this.props.handleHistoryReplace('/Main');\n        } else {\n          console.log(response.data);\n          e.target.value = \"ID or Password are wrong\";\n          setTimeout(() => {\n            e.target.value = \"SigIn\";\n          }, 1500);\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: signIn.pageContainer,\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: signIn.userInfo,\n          children: \"UserID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: signIn.userInput,\n          placeholder: \"Your ID\",\n          type: \"text\",\n          onBlur: e => {\n            this.handleBlur(e, 'id');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: signIn.userInfo,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: signIn.userInput,\n          placeholder: \"Password\",\n          type: \"password\",\n          onBlur: e => {\n            this.handleBlur(e, 'password');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: signIn.signInButton,\n          type: \"button\",\n          value: \"SignIn\",\n          onClick: e => {\n            this.handleLoginClick(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: signIn.forgot,\n          children: \"Forgot your password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  UserID: state.userState.UserID\n}), {\n  setUserID,\n  setUserType,\n  checkUserID\n})(SignIn);","map":{"version":3,"sources":["D:/Project/React/iipsmt/src/containers/SignIn/index.jsx"],"names":["React","Component","connect","signIn","reqLogin","setUserID","setUserType","checkUserID","SignIn","handleBlur","e","info","target","value","setState","userID","password","handleLoginClick","state","console","log","response","data","code","props","type","handleHistoryReplace","setTimeout","render","pageContainer","userInfo","userInput","signInButton","forgot","UserID","userState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { } from 'react-router-dom'\r\n\r\nimport signIn from './index.module.css'\r\nimport { reqLogin } from '../../api/index'\r\nimport { setUserID, setUserType, checkUserID } from '../../redux/actions/UserInfo'\r\n\r\nclass SignIn extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <form className={signIn.pageContainer} action=\"\">\r\n                    <div className={signIn.userInfo} >UserID</div>\r\n                    <input className={signIn.userInput} placeholder=\"Your ID\" type=\"text\" onBlur={(e) => { this.handleBlur(e, 'id') }} />\r\n                    <div className={signIn.userInfo}>Password</div>\r\n                    <input className={signIn.userInput} placeholder=\"Password\" type=\"password\" onBlur={(e) => { this.handleBlur(e, 'password') }} />\r\n                    <input className={signIn.signInButton} type=\"button\" value=\"SignIn\" onClick={(e) => { this.handleLoginClick(e) }} />\r\n                    <div className={signIn.forgot}>Forgot your password?</div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleBlur = async (e, info) => {\r\n        switch (info) {\r\n            case 'id':\r\n                if (e.target.value !== '') {\r\n                    this.setState({\r\n                        userID: e.target.value\r\n                    })\r\n                }\r\n                break;\r\n            case 'password':\r\n                if (e.target.value !== '') {\r\n                    this.setState({\r\n                        password: e.target.value\r\n                    })\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleLoginClick = async (e) => {\r\n        const { userID, password } = this.state;\r\n        console.log(userID, password);\r\n        if (userID && password) {\r\n            var response = await reqLogin({ userID, password })\r\n            if (response.data.code) {\r\n                e.target.value = \"Login Successfully\"\r\n                this.props.setUserID(userID)\r\n                this.props.setUserType(response.data.data.type)\r\n                this.props.handleHistoryReplace('/Main')\r\n            } else {\r\n                console.log(response.data);\r\n                e.target.value = \"ID or Password are wrong\"\r\n                setTimeout(() => {\r\n                    e.target.value = \"SigIn\"\r\n                }, 1500);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n        UserID: state.userState.UserID\r\n    }),\r\n    {\r\n        setUserID,\r\n        setUserType,\r\n        checkUserID\r\n    }\r\n)(SignIn)\r\n"]},"metadata":{},"sourceType":"module"}