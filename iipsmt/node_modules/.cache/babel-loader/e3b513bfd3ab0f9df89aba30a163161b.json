{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../util/createLoading';\nimport { ErrorBoundary } from '../base';\nimport useGraph from '../hooks/useGraph';\nimport { customIconNode } from './customItems';\nimport { defaultLabelCfg, defaultStateStyles } from './constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents } from './utils';\nvar defaultNodeStyle = {\n  fill: '#91d5ff',\n  stroke: '#40a9ff',\n  radius: 2\n};\nvar defaultEdgeStyle = {\n  stroke: '#91d5ff',\n  endArrow: {\n    path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n    fill: '#91d5ff',\n    d: -20\n  }\n};\nvar defaultLayout = {\n  type: 'compactBox',\n  direction: 'TB',\n  getId: function getId(d) {\n    return d.id;\n  },\n  getHeight: function getHeight() {\n    return 16;\n  },\n  getWidth: function getWidth() {\n    return 16;\n  },\n  getVGap: function getVGap() {\n    return 40;\n  },\n  getHGap: function getHGap() {\n    return 70;\n  }\n};\nvar graphs = {};\n\nvar OrganizationTreeGraphComponent = function (props) {\n  var data = props.data,\n      className = props.className,\n      style = props.style,\n      width = props.width,\n      height = props.height,\n      _a = props.nodeType,\n      nodeType = _a === void 0 ? 'rect' : _a,\n      _b = props.edgeType,\n      edgeType = _b === void 0 ? 'flow-line' : _b,\n      _c = props.collapseExpand,\n      collapseExpand = _c === void 0 ? false : _c,\n      _d = props.nodeSize,\n      nodeSize = _d === void 0 ? [120, 40] : _d,\n      _e = props.nodeLabelCfg,\n      nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e,\n      _f = props.edgeLabelCfg,\n      edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n      _g = props.layout,\n      layout = _g === void 0 ? defaultLayout : _g,\n      _h = props.enableEdit,\n      enableEdit = _h === void 0 ? false : _h,\n      minimapCfg = props.minimapCfg,\n      _j = props.nodeStyle,\n      nodeStyle = _j === void 0 ? defaultNodeStyle : _j,\n      _k = props.edgeStyle,\n      edgeStyle = _k === void 0 ? defaultEdgeStyle : _k,\n      _l = props.nodeStateStyles,\n      nodeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n      _m = props.edgeStateStyles,\n      edgeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n      _o = props.autoFit,\n      autoFit = _o === void 0 ? true : _o,\n      graphRef = props.graphRef,\n      onReady = props.onReady,\n      loading = props.loading,\n      loadingTemplate = props.loadingTemplate,\n      errorTemplate = props.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], props, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n\n    if (nodeType === 'icon-node') {\n      customIconNode({\n        enableEdit: enableEdit\n      });\n    }\n\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        linkCenter: true,\n        modes: {\n          default: ['drag-canvas', 'zoom-canvas']\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout\n      });\n      graphs[graphId] = graph;\n    }\n\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n\n    processMinimap(minimapCfg, graph);\n    renderGraph(graph, data, autoFit);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    if (collapseExpand) {\n      graph.addBehaviors({\n        type: 'collapse-expand'\n      }, 'default');\n    }\n\n    bindEvents(graph, props);\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default OrganizationTreeGraphComponent;","map":{"version":3,"sources":["D:/Project/React/iipsmt/node_modules/@ant-design/charts/es/graph/organizationTreeGraph.js"],"names":["React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","customIconNode","defaultLabelCfg","defaultStateStyles","getGraphSize","processMinimap","getGraphId","renderGraph","bindEvents","defaultNodeStyle","fill","stroke","radius","defaultEdgeStyle","endArrow","path","d","defaultLayout","type","direction","getId","id","getHeight","getWidth","getVGap","getHGap","graphs","OrganizationTreeGraphComponent","props","data","className","style","width","height","_a","nodeType","_b","edgeType","_c","collapseExpand","_d","nodeSize","_e","nodeLabelCfg","_f","edgeLabelCfg","_g","layout","_h","enableEdit","minimapCfg","_j","nodeStyle","_k","edgeStyle","_l","nodeStateStyles","_m","edgeStateStyles","_o","autoFit","graphRef","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","graphSize","TreeGraph","current","linkCenter","modes","default","defaultNode","size","labelCfg","defaultEdge","addBehaviors","destroy","createElement","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../util/createLoading';\nimport { ErrorBoundary } from '../base';\nimport useGraph from '../hooks/useGraph';\nimport { customIconNode } from './customItems';\nimport { defaultLabelCfg, defaultStateStyles } from './constants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents } from './utils';\nvar defaultNodeStyle = {\n    fill: '#91d5ff',\n    stroke: '#40a9ff',\n    radius: 2,\n};\nvar defaultEdgeStyle = {\n    stroke: '#91d5ff',\n    endArrow: {\n        path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n        fill: '#91d5ff',\n        d: -20,\n    },\n};\nvar defaultLayout = {\n    type: 'compactBox',\n    direction: 'TB',\n    getId: function getId(d) {\n        return d.id;\n    },\n    getHeight: function getHeight() {\n        return 16;\n    },\n    getWidth: function getWidth() {\n        return 16;\n    },\n    getVGap: function getVGap() {\n        return 40;\n    },\n    getHGap: function getHGap() {\n        return 70;\n    },\n};\nvar graphs = {};\nvar OrganizationTreeGraphComponent = function (props) {\n    var data = props.data, className = props.className, style = props.style, width = props.width, height = props.height, _a = props.nodeType, nodeType = _a === void 0 ? 'rect' : _a, _b = props.edgeType, edgeType = _b === void 0 ? 'flow-line' : _b, _c = props.collapseExpand, collapseExpand = _c === void 0 ? false : _c, _d = props.nodeSize, nodeSize = _d === void 0 ? [120, 40] : _d, _e = props.nodeLabelCfg, nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e, _f = props.edgeLabelCfg, edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = props.layout, layout = _g === void 0 ? defaultLayout : _g, _h = props.enableEdit, enableEdit = _h === void 0 ? false : _h, minimapCfg = props.minimapCfg, _j = props.nodeStyle, nodeStyle = _j === void 0 ? defaultNodeStyle : _j, _k = props.edgeStyle, edgeStyle = _k === void 0 ? defaultEdgeStyle : _k, _l = props.nodeStateStyles, nodeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = props.edgeStateStyles, edgeStateStyles = _m === void 0 ? defaultStateStyles : _m, _o = props.autoFit, autoFit = _o === void 0 ? true : _o, graphRef = props.graphRef, onReady = props.onReady, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], props, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        if (nodeType === 'icon-node') {\n            customIconNode({ enableEdit: enableEdit });\n        }\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                linkCenter: true,\n                modes: {\n                    default: ['drag-canvas', 'zoom-canvas'],\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                    labelCfg: edgeLabelCfg,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        processMinimap(minimapCfg, graph);\n        renderGraph(graph, data, autoFit);\n        if (onReady) {\n            onReady(graph);\n        }\n        if (collapseExpand) {\n            graph.addBehaviors({\n                type: 'collapse-expand',\n            }, 'default');\n        }\n        bindEvents(graph, props);\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default OrganizationTreeGraphComponent;\n"]},"metadata":{},"sourceType":"module"}