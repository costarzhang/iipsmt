{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\iipsmt\\\\src\\\\pages\\\\UploadTest\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport MainSheet from './index.module.css';\nimport Loading from './loading.module.css';\nimport icon_file from '../../static/icons/icon_file.png';\nimport icon_train from '../../static/icons/icon_train.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UploadTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClassifyClick = () => {\n      if (!this.state.uploaded) {\n        alert(\"未上传数据文件\");\n        return;\n      }\n\n      this.setState({\n        loading: true\n      }); // this.props.history.push('/test_result')\n      // console.log(this.resultFile);\n\n      let form = new FormData();\n      form.append('file', this.resultFile);\n      form.append('chunk', '0');\n      axios.post('/classify_' + this.props.match.params.file_type, form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log('upload successfully', res);\n\n        switch (this.props.match.params.file_type) {\n          case 'step1':\n            this.props.history.push('/test_result');\n            break;\n\n          case 'step3':\n            this.props.history.push('/classify_step3');\n            break;\n\n          default:\n            this.props.history.push('/test_result');\n        }\n      });\n    };\n\n    this.handlePredictClick = () => {\n      if (!this.state.uploaded) {\n        alert(\"未上传数据文件\");\n        return;\n      }\n\n      this.setState({\n        loading: true\n      }); // this.props.history.push('/test_result')\n      // console.log(this.resultFile);\n\n      let form = new FormData();\n      form.append('file', this.resultFile);\n      form.append('chunk', '0');\n      axios.post('/predict_' + this.props.match.params.file_type, form, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log('upload successfully', res);\n\n        switch (this.props.match.params.file_type) {\n          case 'step1':\n            this.props.history.push('/predict_step2');\n            break;\n\n          case 'step3':\n            this.props.history.push('/predict_step3');\n            break;\n\n          default:\n            this.props.history.push('/predict_step2');\n        }\n      });\n    };\n\n    this.handleFileUpload = e => {\n      var self = this;\n      var resultFile = e.target.files[0];\n      this.resultFile = e.target.files[0];\n\n      if (resultFile) {\n        self.setState({\n          loading: true\n        });\n        var reader = new FileReader();\n        reader.readAsText(resultFile, 'UTF-8');\n\n        reader.onloadend = function () {\n          var content = this.result.substr(0, this.result.length / 10).replace(/[,]/g, '\\t');\n          self.setState({\n            uploaded: true,\n            // content: this.result.replace(/[,]/g, '\\t'),\n            content,\n            fileName: e.target.value,\n            loading: false\n          });\n        };\n      }\n    };\n\n    this.componentDidMount = () => {\n      if (!document.cookie.length) {\n        alert('此操作需要用户登录');\n        this.props.history.push('/');\n        return;\n      }\n    };\n\n    this.state = {\n      fileName: '未上传',\n      content: '文件预览区域',\n      loading: false,\n      uploaded: false\n    };\n    this.resultFile = '';\n    this.classifyButton = this.props.match.params.file_type === 'step1' ? '选择训练集' : '选择测试集';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: [MainSheet.pagePadding, 'zoomIn'].join(' '),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: MainSheet.pageContainer,\n        children: [this.state.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Loading.pageContainer,\n          children: [\"\\u6B63\\u5728\\u4E0A\\u4F20\\u6587\\u4EF6 \\u8BF7\\u52FF\\u5173\\u95ED\\u9875\\u9762\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Loading.bar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: MainSheet.fileUploadModule,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: MainSheet.filePath,\n            children: this.state.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            className: MainSheet.fileUploadLable,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: MainSheet.btnIcon,\n              src: icon_file,\n              alt: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), this.classifyButton]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: MainSheet.modelClassifying,\n            onClick: () => this.handleClassifyClick(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: MainSheet.btnIcon,\n              src: icon_train,\n              alt: \"train\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), \"\\u6076\\u610F\\u6D41\\u91CF\\u5206\\u7C7B\\u4EFB\\u52A1\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: MainSheet.modelPredicting,\n            onClick: () => this.handlePredictClick(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: MainSheet.btnIcon,\n              src: icon_train,\n              alt: \"train\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), \"\\u6076\\u610F\\u6D41\\u91CF\\u9884\\u6D4B\\u4EFB\\u52A1\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file\",\n            className: MainSheet.fileUpload,\n            type: \"file\",\n            accept: \".csv\",\n            onChange: e => this.handleFileUpload(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: MainSheet.fileOverview,\n          children: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Project/React/iipsmt/src/pages/UploadTest/index.jsx"],"names":["React","Component","MainSheet","Loading","icon_file","icon_train","axios","UploadTest","constructor","props","handleClassifyClick","state","uploaded","alert","setState","loading","form","FormData","append","resultFile","post","match","params","file_type","headers","then","res","console","log","history","push","handlePredictClick","handleFileUpload","e","self","target","files","reader","FileReader","readAsText","onloadend","content","result","substr","length","replace","fileName","value","componentDidMount","document","cookie","classifyButton","render","pagePadding","join","pageContainer","bar","fileUploadModule","filePath","fileUploadLable","btnIcon","modelClassifying","modelPredicting","fileUpload","fileOverview"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport MainSheet from './index.module.css'\r\nimport Loading from './loading.module.css'\r\n\r\nimport icon_file from '../../static/icons/icon_file.png'\r\nimport icon_train from '../../static/icons/icon_train.png'\r\nimport axios from 'axios'\r\n\r\nexport default class UploadTest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fileName: '未上传',\r\n            content: '文件预览区域',\r\n            loading: false,\r\n            uploaded:false,\r\n        }\r\n        this.resultFile = '';\r\n        this.classifyButton = this.props.match.params.file_type === 'step1' ? '选择训练集' : '选择测试集'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={[MainSheet.pagePadding, 'zoomIn'].join(' ')}>\r\n\r\n                <div className={MainSheet.pageContainer}>\r\n                    {\r\n                        this.state.loading ? (\r\n                            <div className={Loading.pageContainer}>\r\n                                正在上传文件 请勿关闭页面\r\n                                <div className={Loading.bar}></div>\r\n                            </div>\r\n                        ) : ''\r\n                    }\r\n                    <div className={MainSheet.fileUploadModule}>\r\n                        <div className={MainSheet.filePath}>{this.state.fileName}</div>\r\n                        <label htmlFor=\"file\" className={MainSheet.fileUploadLable}>\r\n                            <img className={MainSheet.btnIcon} src={icon_file} alt=\"file\" />\r\n                            {this.classifyButton}\r\n                        </label>\r\n                        <button className={MainSheet.modelClassifying} onClick={() => this.handleClassifyClick()}>\r\n                            <img className={MainSheet.btnIcon} src={icon_train} alt=\"train\" />恶意流量分类任务\r\n                        </button>\r\n                        <button className={MainSheet.modelPredicting} onClick={() => this.handlePredictClick()}>\r\n                            <img className={MainSheet.btnIcon} src={icon_train} alt=\"train\" />恶意流量预测任务\r\n                        </button>\r\n                        <input id='file' className={MainSheet.fileUpload} type=\"file\" accept='.csv' onChange={(e) => this.handleFileUpload(e)} />\r\n                    </div>\r\n                    <span className={MainSheet.fileOverview}>{this.state.content}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleClassifyClick = () => {\r\n        if( !this.state.uploaded ){\r\n            alert(\"未上传数据文件\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        // this.props.history.push('/test_result')\r\n        // console.log(this.resultFile);\r\n        let form = new FormData();\r\n        form.append('file', this.resultFile);\r\n        form.append('chunk', '0');\r\n        axios.post('/classify_' + this.props.match.params.file_type, form, { headers: { \"Content-Type\": \"multipart/form-data\" } })\r\n            .then(res => {\r\n                console.log('upload successfully', res);\r\n                switch (this.props.match.params.file_type) {\r\n                    case 'step1':\r\n                        this.props.history.push('/test_result')\r\n                        break;\r\n                    case 'step3':\r\n                        this.props.history.push('/classify_step3')\r\n                        break;\r\n                    default:\r\n                        this.props.history.push('/test_result')\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    handlePredictClick = () => {\r\n        if( !this.state.uploaded ){\r\n            alert(\"未上传数据文件\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        // this.props.history.push('/test_result')\r\n        // console.log(this.resultFile);\r\n        let form = new FormData();\r\n        form.append('file', this.resultFile);\r\n        form.append('chunk', '0');\r\n        axios.post('/predict_' + this.props.match.params.file_type, form, { headers: { \"Content-Type\": \"multipart/form-data\" } })\r\n            .then(res => {\r\n                console.log('upload successfully', res);\r\n                switch (this.props.match.params.file_type) {\r\n                    case 'step1':\r\n                        this.props.history.push('/predict_step2')\r\n                        break;\r\n                    case 'step3':\r\n                        this.props.history.push('/predict_step3')\r\n                        break;\r\n                    default:\r\n                        this.props.history.push('/predict_step2')\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    handleFileUpload = (e) => {\r\n        var self = this;\r\n        var resultFile = e.target.files[0];\r\n        this.resultFile = e.target.files[0];\r\n        if (resultFile) {\r\n            self.setState({\r\n                loading: true\r\n            })\r\n            var reader = new FileReader();\r\n            reader.readAsText(resultFile, 'UTF-8');\r\n            reader.onloadend = function () {\r\n                var content = this.result.substr(0,this.result.length/10).replace(/[,]/g, '\\t');\r\n                self.setState({\r\n                    uploaded:true,\r\n                    // content: this.result.replace(/[,]/g, '\\t'),\r\n                    content,\r\n                    fileName: e.target.value,\r\n                    loading: false\r\n                })\r\n            };\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (!document.cookie.length) {\r\n            alert('此操作需要用户登录')\r\n            this.props.history.push('/')\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}