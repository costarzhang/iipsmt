{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\iipsmt\\\\src\\\\components\\\\HorizontalBar\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport { Column } from '@ant-design/charts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n    this.data = [{\n      type: '家具家电',\n      sales: 38\n    }, {\n      type: '粮油副食',\n      sales: 52\n    }, {\n      type: '生鲜水果',\n      sales: 61\n    }, {\n      type: '美容洗护',\n      sales: 145\n    }, {\n      type: '母婴用品',\n      sales: 48\n    }, {\n      type: '进口食品',\n      sales: 38\n    }, {\n      type: '食品饮料',\n      sales: 38\n    }, {\n      type: '家庭清洁',\n      sales: 38\n    }];\n    this.config = {\n      data: this.data,\n      width: 300,\n      xField: 'type',\n      yField: 'sales',\n      label: {\n        position: 'middle',\n        style: {\n          fill: '#FFFFFF',\n          opacity: 0.6\n        }\n      },\n      xAxis: {\n        label: {\n          autoHide: true,\n          autoRotate: false\n        }\n      },\n      meta: {\n        type: {\n          alias: '类别'\n        },\n        sales: {\n          alias: '销售额'\n        }\n      }\n    };\n\n    this.getData = async () => {\n      console.log(123123); // let response = await axios({\n      //     method: 'POST',\n      //     url: 'http://localhost:9001/',\n      //     timeout:60*1000,\n      // })\n      // console.log(response.data);\n\n      var request = new XMLHttpRequest();\n      request.open(\"POST\", \"http://localhost:9001/\");\n      request.addEventListener(\"load\", response => {\n        console.log(response);\n      });\n      request.send();\n    };\n\n    this.getData();\n    console.log(12);\n  }\n\n  render() {\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(Column, { ...this.config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Project/React/iipsmt/src/components/HorizontalBar/index.jsx"],"names":["React","Component","Column","axios","index","constructor","props","data","type","sales","config","width","xField","yField","label","position","style","fill","opacity","xAxis","autoHide","autoRotate","meta","alias","getData","console","log","request","XMLHttpRequest","open","addEventListener","response","send","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAMnBC,IANmB,GAMZ,CACH;AACIC,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADG,EAKH;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KALG,EASH;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KATG,EAaH;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KAbG,EAiBH;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KAjBG,EAqBH;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KArBG,EAyBH;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KAzBG,EA6BH;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KA7BG,CANY;AAAA,SAyCnBC,MAzCmB,GAyCV;AACLH,MAAAA,IAAI,EAAE,KAAKA,IADN;AAELI,MAAAA,KAAK,EAAE,GAFF;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,MAAM,EAAE,OAJH;AAKLC,MAAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE,QADP;AAEHC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,SADH;AAEHC,UAAAA,OAAO,EAAE;AAFN;AAFJ,OALF;AAYLC,MAAAA,KAAK,EAAE;AACHL,QAAAA,KAAK,EAAE;AACHM,UAAAA,QAAQ,EAAE,IADP;AAEHC,UAAAA,UAAU,EAAE;AAFT;AADJ,OAZF;AAkBLC,MAAAA,IAAI,EAAE;AACFd,QAAAA,IAAI,EAAE;AAAEe,UAAAA,KAAK,EAAE;AAAT,SADJ;AAEFd,QAAAA,KAAK,EAAE;AAAEc,UAAAA,KAAK,EAAE;AAAT;AAFL;AAlBD,KAzCU;;AAAA,SAwEnBC,OAxEmB,GAwET,YAAW;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;;AAGA,UAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,MAAb,EAAqB,wBAArB;AACAF,MAAAA,OAAO,CAACG,gBAAR,CAAyB,MAAzB,EAAiCC,QAAD,IAAY;AACxCN,QAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACH,OAFD;AAGAJ,MAAAA,OAAO,CAACK,IAAR;AACH,KAxFkB;;AAEf,SAAKR,OAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACH;;AA6DDO,EAAAA,MAAM,GAAG;AACLR,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,wBACI,QAAC,MAAD,OAAY,KAAKhB;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAvEwC","sourcesContent":["import React, { Component } from 'react'\r\nimport { Column } from '@ant-design/charts';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getData();\r\n        console.log(12);\r\n    }\r\n\r\n    data = [\r\n        {\r\n            type: '家具家电',\r\n            sales: 38,\r\n        },\r\n        {\r\n            type: '粮油副食',\r\n            sales: 52,\r\n        },\r\n        {\r\n            type: '生鲜水果',\r\n            sales: 61,\r\n        },\r\n        {\r\n            type: '美容洗护',\r\n            sales: 145,\r\n        },\r\n        {\r\n            type: '母婴用品',\r\n            sales: 48,\r\n        },\r\n        {\r\n            type: '进口食品',\r\n            sales: 38,\r\n        },\r\n        {\r\n            type: '食品饮料',\r\n            sales: 38,\r\n        },\r\n        {\r\n            type: '家庭清洁',\r\n            sales: 38,\r\n        }\r\n    ];\r\n\r\n    config = {\r\n        data: this.data,\r\n        width: 300,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        label: {\r\n            position: 'middle',\r\n            style: {\r\n                fill: '#FFFFFF',\r\n                opacity: 0.6,\r\n            },\r\n        },\r\n        xAxis: {\r\n            label: {\r\n                autoHide: true,\r\n                autoRotate: false,\r\n            },\r\n        },\r\n        meta: {\r\n            type: { alias: '类别' },\r\n            sales: { alias: '销售额' },\r\n        },\r\n    };\r\n\r\n    render() {\r\n        console.log('render');\r\n        return (\r\n            <Column {...this.config} />\r\n        )\r\n    }\r\n\r\n    getData = async () =>{\r\n        console.log(123123);\r\n        // let response = await axios({\r\n        //     method: 'POST',\r\n        //     url: 'http://localhost:9001/',\r\n        //     timeout:60*1000,\r\n        // })\r\n        // console.log(response.data);\r\n\r\n\r\n        var request = new XMLHttpRequest();\r\n        request.open(\"POST\", \"http://localhost:9001/\");\r\n        request.addEventListener(\"load\",(response)=>{\r\n            console.log(response);\r\n        })\r\n        request.send()\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}