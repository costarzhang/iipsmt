{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport { ErrorBoundary } from '../../base';\nimport useGraph from '../../hooks/useGraph';\nimport ChartLoading from '../../util/createLoading';\nimport { getGraphSize, getGraphId } from '../utils';\nimport { bindDefaultEvents, renderGraph, getDefaultEdgeArrowCfg } from '../utils';\nimport { registerCardNode } from '../customItems';\nimport { defaultNodeAnchorPoints, defaultNodeSize, defaultStateStyles, defaultNodeStyle } from '../constants';\nvar graphs = {};\nregisterCardNode();\nvar defaultLayout = {\n  type: 'compactBox',\n  direction: 'LR',\n  getId: function (d) {\n    return d.id;\n  },\n  getHeight: function () {\n    return 60;\n  },\n  getWidth: function () {\n    return 16;\n  },\n  getVGap: function () {\n    return 16;\n  },\n  getHGap: function () {\n    return 100;\n  }\n};\n\nvar IndentedTreeGraph = function (props) {\n  var data = props.data,\n      className = props.className,\n      style = props.style,\n      width = props.width,\n      height = props.height,\n      _a = props.nodeType,\n      nodeType = _a === void 0 ? 'card' : _a,\n      _b = props.edgeType,\n      edgeType = _b === void 0 ? 'cubic-horizontal' : _b,\n      _c = props.behaviors,\n      behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c,\n      _d = props.nodeAnchorPoints,\n      nodeAnchorPoints = _d === void 0 ? defaultNodeAnchorPoints : _d,\n      _e = props.nodeSize,\n      nodeSize = _e === void 0 ? defaultNodeSize : _e,\n      layout = props.layout,\n      _f = props.animate,\n      animate = _f === void 0 ? true : _f,\n      nodeStyle = props.nodeStyle,\n      edgeStyle = props.edgeStyle,\n      edgeCfg = props.edgeCfg,\n      markerStyle = props.markerStyle,\n      _g = props.markerPosition,\n      markerPosition = _g === void 0 ? 'right' : _g,\n      _h = props.nodeStateStyles,\n      nodeStateStyles = _h === void 0 ? defaultStateStyles : _h,\n      _j = props.edgeStateStyles,\n      edgeStateStyles = _j === void 0 ? defaultStateStyles : _j,\n      _k = props.collapseExpand,\n      collapseExpand = _k === void 0 ? true : _k,\n      titleStyle = props.titleStyle,\n      bodyStyle = props.bodyStyle,\n      footerStyle = props.footerStyle,\n      footerValueStyle = props.footerValueStyle,\n      _l = props.showArrow,\n      showArrow = _l === void 0 ? true : _l,\n      _m = props.arrowType,\n      arrowType = _m === void 0 ? 'vee' : _m,\n      _o = props.autoFit,\n      autoFit = _o === void 0 ? true : _o,\n      onReady = props.onReady,\n      loading = props.loading,\n      loadingTemplate = props.loadingTemplate,\n      errorTemplate = props.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], props, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        animate: animate,\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          anchorPoints: nodeAnchorPoints,\n          titleStyle: titleStyle,\n          bodyStyle: bodyStyle,\n          footerStyle: footerStyle,\n          footerValueStyle: footerValueStyle,\n          markerStyle: markerStyle,\n          collapseExpand: collapseExpand,\n          markerPosition: markerPosition\n        },\n        defaultEdge: {\n          type: edgeType\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: __assign(__assign({}, defaultLayout), layout)\n      });\n      graphs[graphId] = graph;\n    }\n\n    graph.node(function (node) {\n      if (typeof nodeStyle === 'function') {\n        return {\n          style: nodeStyle(node, graph)\n        };\n      }\n\n      return {\n        style: __assign(__assign({}, defaultNodeStyle), nodeStyle)\n      };\n    });\n    graph.edge(function (edge) {\n      if (edgeCfg) {\n        return typeof edgeCfg === 'function' ? edgeCfg(edge, graph) : edgeCfg;\n      }\n\n      if (typeof edgeStyle === 'function') {\n        return {\n          style: edgeStyle(edge, graph)\n        };\n      }\n\n      return {\n        style: __assign(__assign({\n          stroke: '#ccc'\n        }, showArrow && getDefaultEdgeArrowCfg(0, arrowType)), edgeStyle)\n      };\n    });\n\n    if (collapseExpand) {\n      bindDefaultEvents(graph, collapseExpand);\n    }\n\n    renderGraph(graph, data, autoFit);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default IndentedTreeGraph;","map":{"version":3,"sources":["D:/Project/React/iipsmt/node_modules/@ant-design/charts/es/graphs/indentedTreeGraph/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","G6","ErrorBoundary","useGraph","ChartLoading","getGraphSize","getGraphId","bindDefaultEvents","renderGraph","getDefaultEdgeArrowCfg","registerCardNode","defaultNodeAnchorPoints","defaultNodeSize","defaultStateStyles","defaultNodeStyle","graphs","defaultLayout","type","direction","getId","d","id","getHeight","getWidth","getVGap","getHGap","IndentedTreeGraph","props","data","className","style","width","height","_a","nodeType","_b","edgeType","_c","behaviors","_d","nodeAnchorPoints","_e","nodeSize","layout","_f","animate","nodeStyle","edgeStyle","edgeCfg","markerStyle","_g","markerPosition","_h","nodeStateStyles","_j","edgeStateStyles","_k","collapseExpand","titleStyle","bodyStyle","footerStyle","footerValueStyle","_l","showArrow","_m","arrowType","_o","autoFit","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","graphSize","TreeGraph","current","modes","default","defaultNode","size","anchorPoints","defaultEdge","node","edge","stroke","destroy","createElement","ref"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,UAAzC;AACA,SAASC,iBAAT,EAA4BC,WAA5B,EAAyCC,sBAAzC,QAAuE,UAAvE;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,uBAAT,EAAkCC,eAAlC,EAAmDC,kBAAnD,EAAuEC,gBAAvE,QAAgG,cAAhG;AACA,IAAIC,MAAM,GAAG,EAAb;AACAL,gBAAgB;AAChB,IAAIM,aAAa,GAAG;AAChBC,EAAAA,IAAI,EAAE,YADU;AAEhBC,EAAAA,SAAS,EAAE,IAFK;AAGhBC,EAAAA,KAAK,EAAE,UAAUC,CAAV,EAAa;AAChB,WAAOA,CAAC,CAACC,EAAT;AACH,GALe;AAMhBC,EAAAA,SAAS,EAAE,YAAY;AACnB,WAAO,EAAP;AACH,GARe;AAShBC,EAAAA,QAAQ,EAAE,YAAY;AAClB,WAAO,EAAP;AACH,GAXe;AAYhBC,EAAAA,OAAO,EAAE,YAAY;AACjB,WAAO,EAAP;AACH,GAde;AAehBC,EAAAA,OAAO,EAAE,YAAY;AACjB,WAAO,GAAP;AACH;AAjBe,CAApB;;AAmBA,IAAIC,iBAAiB,GAAG,UAAUC,KAAV,EAAiB;AACrC,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAAA,MAAuBC,SAAS,GAAGF,KAAK,CAACE,SAAzC;AAAA,MAAoDC,KAAK,GAAGH,KAAK,CAACG,KAAlE;AAAA,MAAyEC,KAAK,GAAGJ,KAAK,CAACI,KAAvF;AAAA,MAA8FC,MAAM,GAAGL,KAAK,CAACK,MAA7G;AAAA,MAAqHC,EAAE,GAAGN,KAAK,CAACO,QAAhI;AAAA,MAA0IA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,MAAhB,GAAyBA,EAA9K;AAAA,MAAkLE,EAAE,GAAGR,KAAK,CAACS,QAA7L;AAAA,MAAuMA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,kBAAhB,GAAqCA,EAAvP;AAAA,MAA2PE,EAAE,GAAGV,KAAK,CAACW,SAAtQ;AAAA,MAAiRA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAC,aAAD,EAAgB,aAAhB,CAAhB,GAAiDA,EAA9U;AAAA,MAAkVE,EAAE,GAAGZ,KAAK,CAACa,gBAA7V;AAAA,MAA+WA,gBAAgB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB5B,uBAAhB,GAA0C4B,EAA5a;AAAA,MAAgbE,EAAE,GAAGd,KAAK,CAACe,QAA3b;AAAA,MAAqcA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB7B,eAAhB,GAAkC6B,EAAlf;AAAA,MAAsfE,MAAM,GAAGhB,KAAK,CAACgB,MAArgB;AAAA,MAA6gBC,EAAE,GAAGjB,KAAK,CAACkB,OAAxhB;AAAA,MAAiiBA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAlkB;AAAA,MAAskBE,SAAS,GAAGnB,KAAK,CAACmB,SAAxlB;AAAA,MAAmmBC,SAAS,GAAGpB,KAAK,CAACoB,SAArnB;AAAA,MAAgoBC,OAAO,GAAGrB,KAAK,CAACqB,OAAhpB;AAAA,MAAypBC,WAAW,GAAGtB,KAAK,CAACsB,WAA7qB;AAAA,MAA0rBC,EAAE,GAAGvB,KAAK,CAACwB,cAArsB;AAAA,MAAqtBA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,OAAhB,GAA0BA,EAAhwB;AAAA,MAAowBE,EAAE,GAAGzB,KAAK,CAAC0B,eAA/wB;AAAA,MAAgyBA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBvC,kBAAhB,GAAqCuC,EAAv1B;AAAA,MAA21BE,EAAE,GAAG3B,KAAK,CAAC4B,eAAt2B;AAAA,MAAu3BA,eAAe,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBzC,kBAAhB,GAAqCyC,EAA96B;AAAA,MAAk7BE,EAAE,GAAG7B,KAAK,CAAC8B,cAA77B;AAAA,MAA68BA,cAAc,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAr/B;AAAA,MAAy/BE,UAAU,GAAG/B,KAAK,CAAC+B,UAA5gC;AAAA,MAAwhCC,SAAS,GAAGhC,KAAK,CAACgC,SAA1iC;AAAA,MAAqjCC,WAAW,GAAGjC,KAAK,CAACiC,WAAzkC;AAAA,MAAslCC,gBAAgB,GAAGlC,KAAK,CAACkC,gBAA/mC;AAAA,MAAioCC,EAAE,GAAGnC,KAAK,CAACoC,SAA5oC;AAAA,MAAupCA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA1rC;AAAA,MAA8rCE,EAAE,GAAGrC,KAAK,CAACsC,SAAzsC;AAAA,MAAotCA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAAxvC;AAAA,MAA4vCE,EAAE,GAAGvC,KAAK,CAACwC,OAAvwC;AAAA,MAAgxCA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAAjzC;AAAA,MAAqzCE,OAAO,GAAGzC,KAAK,CAACyC,OAAr0C;AAAA,MAA80CC,OAAO,GAAG1C,KAAK,CAAC0C,OAA91C;AAAA,MAAu2CC,eAAe,GAAG3C,KAAK,CAAC2C,eAA/3C;AAAA,MAAg5CC,aAAa,GAAG5C,KAAK,CAAC4C,aAAt6C;AACA,MAAIC,SAAS,GAAGzE,KAAK,CAAC0E,MAAN,CAAa,IAAb,CAAhB;AACA,MAAIC,KAAK,GAAG3E,KAAK,CAAC0E,MAAN,CAAa,IAAb,CAAZ;AACA,MAAIE,OAAO,GAAGrE,UAAU,CAACoE,KAAD,CAAxB;AACAvE,EAAAA,QAAQ,CAACY,MAAM,CAAC4D,OAAD,CAAP,EAAkBhD,KAAlB,EAAyB6C,SAAzB,CAAR;AACAxE,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI4E,SAAS,GAAGvE,YAAY,CAAC0B,KAAD,EAAQC,MAAR,EAAgBwC,SAAhB,CAA5B;AACA,QAAIE,KAAK,GAAG3D,MAAM,CAAC4D,OAAD,CAAlB;;AACA,QAAI,CAACD,KAAL,EAAY;AACRA,MAAAA,KAAK,GAAG,IAAIzE,EAAE,CAAC4E,SAAP,CAAiB;AACrBL,QAAAA,SAAS,EAAEA,SAAS,CAACM,OADA;AAErB/C,QAAAA,KAAK,EAAE6C,SAAS,CAAC,CAAD,CAFK;AAGrB5C,QAAAA,MAAM,EAAE4C,SAAS,CAAC,CAAD,CAHI;AAIrB/B,QAAAA,OAAO,EAAEA,OAJY;AAKrBkC,QAAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE1C;AADN,SALc;AAQrB2C,QAAAA,WAAW,EAAE;AACThE,UAAAA,IAAI,EAAEiB,QADG;AAETgD,UAAAA,IAAI,EAAExC,QAFG;AAGTyC,UAAAA,YAAY,EAAE3C,gBAHL;AAITkB,UAAAA,UAAU,EAAEA,UAJH;AAKTC,UAAAA,SAAS,EAAEA,SALF;AAMTC,UAAAA,WAAW,EAAEA,WANJ;AAOTC,UAAAA,gBAAgB,EAAEA,gBAPT;AAQTZ,UAAAA,WAAW,EAAEA,WARJ;AASTQ,UAAAA,cAAc,EAAEA,cATP;AAUTN,UAAAA,cAAc,EAAEA;AAVP,SARQ;AAoBrBiC,QAAAA,WAAW,EAAE;AACTnE,UAAAA,IAAI,EAAEmB;AADG,SApBQ;AAuBrBiB,QAAAA,eAAe,EAAEA,eAvBI;AAwBrBE,QAAAA,eAAe,EAAEA,eAxBI;AAyBrBZ,QAAAA,MAAM,EAAE1D,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK+B,aAAL,CAAT,EAA8B2B,MAA9B;AAzBK,OAAjB,CAAR;AA2BA5B,MAAAA,MAAM,CAAC4D,OAAD,CAAN,GAAkBD,KAAlB;AACH;;AACDA,IAAAA,KAAK,CAACW,IAAN,CAAW,UAAUA,IAAV,EAAgB;AACvB,UAAI,OAAOvC,SAAP,KAAqB,UAAzB,EAAqC;AACjC,eAAO;AACHhB,UAAAA,KAAK,EAAEgB,SAAS,CAACuC,IAAD,EAAOX,KAAP;AADb,SAAP;AAGH;;AACD,aAAO;AACH5C,QAAAA,KAAK,EAAE7C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK6B,gBAAL,CAAT,EAAiCgC,SAAjC;AADZ,OAAP;AAGH,KATD;AAUA4B,IAAAA,KAAK,CAACY,IAAN,CAAW,UAAUA,IAAV,EAAgB;AACvB,UAAItC,OAAJ,EAAa;AACT,eAAO,OAAOA,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACsC,IAAD,EAAOZ,KAAP,CAAvC,GAAuD1B,OAA9D;AACH;;AACD,UAAI,OAAOD,SAAP,KAAqB,UAAzB,EAAqC;AACjC,eAAO;AACHjB,UAAAA,KAAK,EAAEiB,SAAS,CAACuC,IAAD,EAAOZ,KAAP;AADb,SAAP;AAGH;;AACD,aAAO;AACH5C,QAAAA,KAAK,EAAE7C,QAAQ,CAACA,QAAQ,CAAC;AAAEsG,UAAAA,MAAM,EAAE;AAAV,SAAD,EAAsBxB,SAAS,IAAItD,sBAAsB,CAAC,CAAD,EAAIwD,SAAJ,CAAzD,CAAT,EAAoFlB,SAApF;AADZ,OAAP;AAGH,KAZD;;AAaA,QAAIU,cAAJ,EAAoB;AAChBlD,MAAAA,iBAAiB,CAACmE,KAAD,EAAQjB,cAAR,CAAjB;AACH;;AACDjD,IAAAA,WAAW,CAACkE,KAAD,EAAQ9C,IAAR,EAAcuC,OAAd,CAAX;;AACA,QAAIC,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAACM,KAAD,CAAP;AACH;;AACD,WAAO,YAAY;AACf,UAAI3D,MAAM,CAAC4D,OAAD,CAAV,EAAqB;AACjB5D,QAAAA,MAAM,CAAC4D,OAAD,CAAN,CAAgBa,OAAhB;AACA,eAAOzE,MAAM,CAAC4D,OAAD,CAAb;AACH;AACJ,KALD;AAMH,GArEQ,EAqEN,EArEM,CAAT;AAsEA,SAAQ5E,KAAK,CAAC0F,aAAN,CAAoBvF,aAApB,EAAmC;AAAEqE,IAAAA,aAAa,EAAEA;AAAjB,GAAnC,EACJF,OAAO,IAAItE,KAAK,CAAC0F,aAAN,CAAoBrF,YAApB,EAAkC;AAAEkE,IAAAA,eAAe,EAAEA;AAAnB,GAAlC,CADP,EAEJvE,KAAK,CAAC0F,aAAN,CAAoB,KAApB,EAA2B;AAAE5D,IAAAA,SAAS,EAAEA,SAAb;AAAwBC,IAAAA,KAAK,EAAEA,KAA/B;AAAsC4D,IAAAA,GAAG,EAAElB;AAA3C,GAA3B,CAFI,CAAR;AAGH,CA/ED;;AAgFA,eAAe9C,iBAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport { ErrorBoundary } from '../../base';\nimport useGraph from '../../hooks/useGraph';\nimport ChartLoading from '../../util/createLoading';\nimport { getGraphSize, getGraphId } from '../utils';\nimport { bindDefaultEvents, renderGraph, getDefaultEdgeArrowCfg } from '../utils';\nimport { registerCardNode } from '../customItems';\nimport { defaultNodeAnchorPoints, defaultNodeSize, defaultStateStyles, defaultNodeStyle, } from '../constants';\nvar graphs = {};\nregisterCardNode();\nvar defaultLayout = {\n    type: 'compactBox',\n    direction: 'LR',\n    getId: function (d) {\n        return d.id;\n    },\n    getHeight: function () {\n        return 60;\n    },\n    getWidth: function () {\n        return 16;\n    },\n    getVGap: function () {\n        return 16;\n    },\n    getHGap: function () {\n        return 100;\n    },\n};\nvar IndentedTreeGraph = function (props) {\n    var data = props.data, className = props.className, style = props.style, width = props.width, height = props.height, _a = props.nodeType, nodeType = _a === void 0 ? 'card' : _a, _b = props.edgeType, edgeType = _b === void 0 ? 'cubic-horizontal' : _b, _c = props.behaviors, behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c, _d = props.nodeAnchorPoints, nodeAnchorPoints = _d === void 0 ? defaultNodeAnchorPoints : _d, _e = props.nodeSize, nodeSize = _e === void 0 ? defaultNodeSize : _e, layout = props.layout, _f = props.animate, animate = _f === void 0 ? true : _f, nodeStyle = props.nodeStyle, edgeStyle = props.edgeStyle, edgeCfg = props.edgeCfg, markerStyle = props.markerStyle, _g = props.markerPosition, markerPosition = _g === void 0 ? 'right' : _g, _h = props.nodeStateStyles, nodeStateStyles = _h === void 0 ? defaultStateStyles : _h, _j = props.edgeStateStyles, edgeStateStyles = _j === void 0 ? defaultStateStyles : _j, _k = props.collapseExpand, collapseExpand = _k === void 0 ? true : _k, titleStyle = props.titleStyle, bodyStyle = props.bodyStyle, footerStyle = props.footerStyle, footerValueStyle = props.footerValueStyle, _l = props.showArrow, showArrow = _l === void 0 ? true : _l, _m = props.arrowType, arrowType = _m === void 0 ? 'vee' : _m, _o = props.autoFit, autoFit = _o === void 0 ? true : _o, onReady = props.onReady, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], props, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                animate: animate,\n                modes: {\n                    default: behaviors,\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    anchorPoints: nodeAnchorPoints,\n                    titleStyle: titleStyle,\n                    bodyStyle: bodyStyle,\n                    footerStyle: footerStyle,\n                    footerValueStyle: footerValueStyle,\n                    markerStyle: markerStyle,\n                    collapseExpand: collapseExpand,\n                    markerPosition: markerPosition,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: __assign(__assign({}, defaultLayout), layout),\n            });\n            graphs[graphId] = graph;\n        }\n        graph.node(function (node) {\n            if (typeof nodeStyle === 'function') {\n                return {\n                    style: nodeStyle(node, graph),\n                };\n            }\n            return {\n                style: __assign(__assign({}, defaultNodeStyle), nodeStyle),\n            };\n        });\n        graph.edge(function (edge) {\n            if (edgeCfg) {\n                return typeof edgeCfg === 'function' ? edgeCfg(edge, graph) : edgeCfg;\n            }\n            if (typeof edgeStyle === 'function') {\n                return {\n                    style: edgeStyle(edge, graph),\n                };\n            }\n            return {\n                style: __assign(__assign({ stroke: '#ccc' }, (showArrow && getDefaultEdgeArrowCfg(0, arrowType))), edgeStyle),\n            };\n        });\n        if (collapseExpand) {\n            bindDefaultEvents(graph, collapseExpand);\n        }\n        renderGraph(graph, data, autoFit);\n        if (onReady) {\n            onReady(graph);\n        }\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default IndentedTreeGraph;\n"]},"metadata":{},"sourceType":"module"}